Programació avançada i estructura de dadesPràctica del segon semestre WordCountDepartament d’EnginyeriaLa Salle – Universitat Ramon Llull 9 de maig de 2016
1 IntroduccióLa pràctica present, WordCount, té com a objectiu el desenvolupament i l’estudi del rendiment d’un algorisme capaç de calcular la freqüència d’aparició de les paraules en un text.El desenvolupament, recolzat en una metodologia de desenvolupament (anàlisi, disseny, implementació i proves), inclou el disseny de diferents modes de recompte que comprenen l’aplicació d’estructures de dades estudiades a classe per l’assoliment del propòsit plantejat.L’estudi del rendiment se centra en analitzar i quantificar, des del punt de vista del cost computacional, del temps d’execució i de l’ús de memòria, l’adaptació de diferents estructures de dades a l’assoliment de diferents funcionalitats vinculades a l’objectiu.A continuació s’exposen les diferents opcions o funcionalitats que ha d’implementar el sistema i unes línies o idees per el disseny de les estructures de dades.2 WordCountQuan el programa s’executi mostrarà un menú amb 4 opcions: (1) Seleccionar fitxer d’entrada, (2) Calcular aparicions, (3) Visualitzar resultats i (4) Sortir. Tot seguit s’explica quin és el comportament que s’espera de cadascuna d’elles.La primera opció, Seleccionar fitxer d‘entrada, ha de permetre indicar el nom del fitxer de text pla del qual es vol comptar quants cops apareix cada paraula. Les 2 opcions següents, Comptar paraules i Veure resultats no es podran executar si prèviament no s’ha seleccionat un fitxer d’entrada correcte. Quan se seleccioni el fitxer d’entrada el programa tornarà a mostrar el menú principal. Es recomana ubicar els fitxers en el mateix directori on s’executi el programa.Calcular aparicions és l’opció per al càlcul de les aparicions de les paraules en el fitxer seleccionat amb l’opció anterior. Quan l’usuari seleccioni aquesta funcionalitat ha d’aparèixer un segon menú que permeti triar 4 modes de recompte diferents. Els modes de recompte permetran assolir l’objectiu fent ús de diferents estructures de dades que s’hagin dissenyat. En l’apartat següent, Disseny dels Modes de recompte, es donen les indicacions pel seu disseny. Un cop l’usuari seleccioni un dels modes, el programa procedirà amb el recompte de paraules i tornarà al menú principal un cop finalitzat el procés. Cal tenir en compte que aquesta opció es podrà executar diversos cops i que en cadascun d’ells cal calcular i emmagatzemar el temps d’execució i l’ús de la memòria.La següent opció, Visualitzar resultats, ha de permetre veure els resultats obtinguts en l’última execució segons 2 modalitats de visualització. Concretament, ha de mostrar un menú amb les opcions:1. Ordenació per número d’aparicions2. Ordenació alfabèticaIndistintament de l’opció triada, els resultats es mostraran en format pàgina web i dins el navegador. La web generada ha de contenir 2 taules. La primera referent a l’ús de memòria i al temps d’execució dels processos de recompte de paraules i obtenció dels resultats. La segona taula contindrà els resultats del recompte de les aparicions de les paraules segons el mode (s’explica a continuació), expressats en 3 columnes: número de la paraula (1, 2, 3, etcètera), la pròpia paraula i el número d’aparicions de la mateixa dins del text d’entrada.3
Si l’usuari selecciona l’opció Ordenació per número d’aparicions, la taula amb els resultats del recompte presentarà les paraules ordenades segons les aparicions, de major a menor número.En canvi, si l’usuari selecciona Ordenació alfabètica, les taula contindrà les paraules ordenades en orde alfabètic de la ‘a’ a la ‘z’.En darrer lloc, l’opció Sortir comportarà la finalització de l’execució del programa. 3 Disseny dels Modes de recompteL’opció Calcular aparicions ha de permetre seleccionar un mínim de 4 modes de recompte diferents. Aquests modes fan referència a les estructures de dades que s’utilitzen durant el recompte de les aparicions de les paraules. L’objectiu d’aquests és veure com repercuteix l’aplicació de les estructures de dades dissenyades en el rendiment de 2 aspectes: en el recompte de paraules i en l’obtenció dels resultats segons els modes de visualització (ordenaments i filtrat).Aquests modes han de cobrir l’ús de les estructures de dades estudiades i analitzades a classe al llarg dels capítols 8 i 9. És a dir, han d’implementar arbres i taules.No s’han d’aplicar totes les variants d’arbres (arbres n-aris, binaris, de cerca, AVL, B, etcètera) ni de taules (llistes, vectors d’accés directe, taules d’adreçament tancat / obert, etcètera) estudiades, sinó considerar tot el ventall d’alternatives per tal de dissenyar 4 estructures de dades adients i veure com afecten al rendiment.Sigueu creatius, aprofiteu al màxim les característiques de cada estructura, modifiqueu-les i/o combineu-les segons creieu que s’adapten millor al propòsit del programa. El disseny de cada mode de recompte i el càlcul del cost computacional s’han d’explicar a la memòria.No es poden utilitzar estructures de dades de la biblioteca de classes Collections de Java. 4 Experimentació i resultatsDesprés del disseny i implementació de les estructures o modes d’execució, l’objectiu és fer un estudi del seu rendiment. Concretament, des del punt de vista del temps d’execució i de l’ús de memòria (observeu que a l’apartat anterior es treballa el cost computacional).Com a mínim cal comparar aquests aspectes (temps d’execució i ús de memòria) per els 3 fitxers de text facilitats a l’eStudy i per:1. Els 4 modes de recompte2. Les 8 combinacions de visualització de resultats amb els modes de recompteObserveu que són un total de 36 experiments o proves (3 fitxers de text que cal provar per 12 execucions) que cal dur a terme un cop finalitzat el desenvolupament. Els del primer punt (modes de recompte) permetran quantificar com s’adapten les estructures al procés de recompte de les paraules i els del segon (combinació amb els modes de visualització de resultats) observar com repercuteixen en l’obtenció dels resultats.Aquests s’han d’exposar a la memòria, és important que utilitzeu taules, gràfics i d’altres elements que considereu oportuns per tal facilitar l’anàlisi i extreure’n conclusions.4
        5 LliuramentDipositar al pou corresponent de l'eStudy un arxiu comprimit .ZIP amb el login dels membres del grup separats per un guió, per exemple P2-ls99999-ls88888.zip. Aquest fitxer comprimit ha de contenir 2 carpetes, una anomenada WordCount i una altra amb el nom Documentacio. Pel que fa al seu contingut:a. WordCount: carpeta del projecte generat amb l’Eclipse.b. Documentació: memòria en format PDF.La memòria ha de contenir els apartats següents:1. PortadaAmb el nom complet i login dels dos membres del grup2. Índex numeratApartats i número de pàgina que ocupa cadascun dins el document3. Disseny dels modes de recompteExposeu el disseny de cadascun dels 4 modes de recompte que heu implementat. Concretament, dibuixeu les estructures de dades dissenyades i doneu el seu diagrama de classes. Expliqueu també el funcionament i doneu el cost computacional del procés de recompte i obtenció de les 2 modalitats de resultats per a cadascun dels 4 modes de recompte.4. ResultatsExposeu l’estudi i l’anàlisi que heu fet dels modes de recompte i de visualització de resultats segons les indicacions explicades abans. Cal incloure el temps d’execució i l’ús de memòria dels 36 experiments (12 per a cadascun dels 3 fitxers de l’eStudy). Utilitzeu taules i gràfics.5. DedicacióIndiqueu una estimació del temps emprat per la realització de la pràctica, incloeu un gràfic de pastís amb les diferents fases (comprensió del problema, disseny dels modes de recompte, desenvolupament del programa, experimentació i documentació)6. ConclusionsExpliqueu les conclusions que heu assolit amb la realització de la pràctica7. BibliografiaIndiqueu els recursos consultats. Seguiu la norma ISO 690:20106 Normativa Grups De dues persones.Eines Java com a llenguatge de programació orientat a objectes.Eclipse com a entorn de desenvolupament integrat (IDE) per codificar l'aplicació. StarUML per l'elaboració de diagrames UML.Dates d'entregaEl no compliment d'algun dels punts especificats en aquest enunciat suposarà la no acceptació de la pràctica i la devolució de la mateixa.La detecció de copia comportarà suspendre tots el integrants dels grups implicats, tant els que han copiat com els que han estat copiats, i perdre l'opció de presentar-              Data   Nota màxima     CONVOCATÒRIA ORDINÀRIA      Diumenge, 29 de maig de 2016    10       CONVOCATÒRIA EXTRAORDINÀRIA   Diumenge, 28 d’agost de 2016   8      5
se a la pròxima convocatòria ordinària (consultar normativa de la universitat). 6